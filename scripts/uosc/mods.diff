diff --git a/scripts/uosc/elements/BufferingIndicator.lua b/scripts/uosc/elements/BufferingIndicator.lua
index 2852e3f..33bdff6 100644
--- a/scripts/uosc/elements/BufferingIndicator.lua
+++ b/scripts/uosc/elements/BufferingIndicator.lua
@@ -11,6 +11,7 @@ function BufferingIndicator:init()
 end
 
 function BufferingIndicator:decide_enabled()
+	if not state.is_stream then self.enabled = false return end
 	local cache = state.cache_underrun or state.cache_buffering and state.cache_buffering < 100
 	local player = state.core_idle and not state.eof_reached
 	if self.enabled then
diff --git a/scripts/uosc/elements/PauseIndicator.lua b/scripts/uosc/elements/PauseIndicator.lua
index 3f7e021..e73131d 100644
--- a/scripts/uosc/elements/PauseIndicator.lua
+++ b/scripts/uosc/elements/PauseIndicator.lua
@@ -61,7 +61,7 @@ function PauseIndicator:render()
 	end
 
 	-- Icon
-	local size = round(math.min(display.width, display.height) * (is_static and 0.20 or 0.15))
+	local size = round(math.min(display.width, display.height) * 0.10)
 	size = size + size * (1 - self.opacity)
 
 	if self.paused then
diff --git a/scripts/uosc/elements/Timeline.lua b/scripts/uosc/elements/Timeline.lua
index 4af64d1..e84d250 100644
--- a/scripts/uosc/elements/Timeline.lua
+++ b/scripts/uosc/elements/Timeline.lua
@@ -78,6 +78,16 @@ function Timeline:get_time_at_x(x)
 	return state.duration * progress
 end
 
+local function show_clock(val)
+	if val then
+		if state.fullscreen then
+			mp.command("script-message-to clock show-clock yes")
+		end
+	else
+		mp.command("script-message-to clock show-clock no")
+	end
+end
+
 ---@param fast? boolean
 function Timeline:set_from_cursor(fast)
 	if state.time and state.duration then
@@ -97,7 +107,8 @@ function Timeline:on_prop_time() self:decide_enabled() end
 function Timeline:on_prop_border() self:update_dimensions() end
 function Timeline:on_prop_fullormaxed() self:update_dimensions() end
 function Timeline:on_display() self:update_dimensions() end
-function Timeline:on_mouse_leave() self:clear_thumbnail() end
+function Timeline:on_mouse_enter() show_clock(true) end
+function Timeline:on_mouse_leave() self:clear_thumbnail() show_clock(false) end
 function Timeline:on_global_mbtn_left_up()
 	if self.pressed then
 		mp.set_property_native('pause', self.pressed_pause)
diff --git a/scripts/uosc/elements/TopBar.lua b/scripts/uosc/elements/TopBar.lua
index 8effa91..1d481bf 100644
--- a/scripts/uosc/elements/TopBar.lua
+++ b/scripts/uosc/elements/TopBar.lua
@@ -83,7 +83,7 @@ function TopBar:update_dimensions()
 	self.size = state.fullormaxed and options.top_bar_size_fullscreen or options.top_bar_size
 	self.icon_size = round(self.size * 0.5)
 	self.spacing = math.ceil(self.size * 0.25)
-	self.font_size = math.floor((self.size - (self.spacing * 2)) * options.font_scale)
+	self.font_size = math.floor((self.size - (self.spacing * 1.6)) * options.font_scale)
 	self.button_width = round(self.size * 1.15)
 	self.ay = Elements.window_border.size
 	self.bx = display.width - Elements.window_border.size
@@ -122,7 +122,7 @@ function TopBar:render()
 	local ass = assdraw.ass_new()
 
 	-- Window title
-	if options.top_bar_title and (state.title or state.has_playlist) then
+	if options.top_bar_title and state.title then
 		local bg_margin = math.floor((self.size - self.font_size) / 4)
 		local padding = self.font_size / 2
 		local title_ax = self.ax + bg_margin
@@ -130,7 +130,7 @@ function TopBar:render()
 		local max_bx = self.title_bx - self.spacing
 
 		-- Playlist position
-		if state.has_playlist then
+		if false then
 			local text = state.playlist_pos .. '' .. state.playlist_count
 			local formatted_text = '{\\b1}' .. state.playlist_pos .. '{\\b0\\fs' .. self.font_size * 0.9 .. '}/'
 				.. state.playlist_count
@@ -142,7 +142,7 @@ function TopBar:render()
 		end
 
 		-- Title
-		local text = state.title
+		local text = state.title or 'mpv'
 		if max_bx - title_ax > self.font_size * 3 and text and text ~= '' then
 			local opts = {
 				size = self.font_size, wrap = 2, color = bgt, border = 1, border_color = bg, opacity = visibility,
diff --git a/scripts/uosc/lib/utils.lua b/scripts/uosc/lib/utils.lua
index 11362e4..4c894f6 100644
--- a/scripts/uosc/lib/utils.lua
+++ b/scripts/uosc/lib/utils.lua
@@ -287,13 +287,20 @@ function decide_navigation_in_list(list, current_index, delta)
 	return new_index, list[new_index]
 end
 
+local function write_watch_later()
+    if mp.get_property_bool("save-position-on-quit") then
+        mp.command("script-message-to auto_save_state skip-delete-state")
+        mp.command("write-watch-later-config")
+    end
+end
+
 ---@param delta number
 function navigate_directory(delta)
 	if not state.path or is_protocol(state.path) then return false end
 	local paths, current_index = get_adjacent_paths(state.path, config.media_types)
 	if paths and current_index then
 		local _, path = decide_navigation_in_list(paths, current_index, delta)
-		if path then mp.commandv('loadfile', path) return true end
+		if path then write_watch_later() mp.commandv('loadfile', path) return true end
 	end
 	return false
 end
@@ -303,7 +310,7 @@ function navigate_playlist(delta)
 	local playlist, pos = mp.get_property_native('playlist'), mp.get_property_native('playlist-pos-1')
 	if playlist and #playlist > 1 and pos then
 		local index = decide_navigation_in_list(playlist, pos, delta)
-		if index then mp.commandv('playlist-play-index', index - 1) return true end
+		if index then write_watch_later() mp.commandv('playlist-play-index', index - 1) return true end
 	end
 	return false
 end
diff --git a/scripts/uosc/main.lua b/scripts/uosc/main.lua
index e0cd0a3..58a56ca 100644
--- a/scripts/uosc/main.lua
+++ b/scripts/uosc/main.lua
@@ -545,7 +545,6 @@ end)
 do
 	local template = nil
 	function update_title()
-		if template:sub(-6) == ' - mpv' then template = template:sub(1, -7) end
 		-- escape ASS, and strip newlines and trailing slashes and trim whitespace
 		local t = mp.command_native({'expand-text', template}):gsub('\\n', ' '):gsub('[\\%s]+$', ''):gsub('^%s+', '')
 		set_state('title', ass_escape(t))

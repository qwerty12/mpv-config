# vim: syntax=config
# Run mpv --list-options to see the default values for most options.

# Video
profile = gpu-hq
vo = gpu
hwdec = d3d11va
gpu-api = d3d11
gpu-context = d3d11
d3d11va-zero-copy = yes
scale = ewa_lanczossharp
video-sync = display-resample
icc-profile-auto = yes
dither-depth = 8
# HDR -> SDR
hdr-compute-peak = no
tone-mapping = reinhard
tone-mapping-param = 0.4

# Audio
volume-max = 135
volume = 135
#audio-file-auto = exact

# Subtitles
slang = enGB,en-GB,en,eng,english,English,enUS,en-US,enm,unknown,und
#sub-font = Trebuchet MS
sub-font = Manrope SemiBold
sub-font-size = 45
sub-margin-y = 50
sub-auto = fuzzy
sub-file-paths = sub;subs;subtitles;srt

# Playback
reset-on-next-file=pause,aid,audio-delay,video-aspect-override,video-pan-x,video-pan-y,video-rotate,video-zoom,contrast,gamma,saturation,hue,sub-visibility,ontop
watch-later-options-remove=pause
watch-later-options-remove=contrast
watch-later-options-remove=mute
watch-later-options-remove=fullscreen
watch-later-options-remove=ontop
watch-later-options-remove=ao-mute
watch-later-options-remove=msg-level
watch-later-options-remove=sub-pos
save-position-on-quit = yes
no-hidpi-window-scale

# UI
osc = no
border = no
osd-playing-msg = [${playlist-pos-1}/${playlist-count}] ${filename}
osd-font = Segoe UI
osd-font-size = 32
autofit-larger = 90%x90%
autofit-smaller = 858x480
title=${?pause==yes:‚è∏}${?mute==yes:üîá}${?ontop==yes:üìå}${!playlist-count==1:[${playlist-pos-1}/${playlist-count}]}${!speed==1.00:[${speed}x]} ${?demuxer-via-network==yes:${media-title}}${!demuxer-via-network==yes:${filename}} - mpv
osd-on-seek = msg-bar

#osd-align-y=bottom
osd-bar-align-y = 1
osd-margin-x = 10
osd-margin-y = 14

osd-bar-h = 2.34375
osd-bar-w = 99
osd-duration = 2000
osd-color = "#C0FFFFFF"
osd-border-color = "#C0000000"
osd-border-size = 1.6
osd-blur = 0.4
osd-spacing = 0.2

osd-status-msg = '${time-pos} / ${duration}${?percent-pos: (${percent-pos}%)}${!chapters==0:${!chapters==1:${?chapter:\nChapter: ${chapter}}}}'

# Keys
native-keyrepeat = yes
input-ar-delay = 500
input-ar-rate = 20
input-right-alt-gr = no

# Misc
msg-level = all=warn,cplayer=info,auto_profiles=warn,osc=error
keep-open = yes
screenshot-directory = ~/Pictures/Screenshots
use-filedir-conf = yes
load-unsafe-playlists = yes
priority = normal
ontop = no

# Cache / Network
ytdl-format = (bestvideo*[height=1080][fps<=?30]/bestvideo*[height<=?1080])+bestaudio/best[height<=?1080]
#[fps<=?30][vcodec!=?vp9][protocol!=http_dash_segments]
demuxer-max-bytes = 2GiB
demuxer-max-back-bytes = 1GiB
demuxer-readahead-secs = 10
stream-buffer-size = 1MiB
demuxer-lavf-buffersize = 131072
demuxer-mkv-subtitle-preroll = yes
demuxer-mkv-subtitle-preroll-secs = 10

# Profiles
[normal-msg-level-with-terminal]
profile-cond=(mp.get_property_bool("terminal") or os.getenv("=clink.id")) and mp.get_property("msg-level"):find("all=warn", 1, true) ~= nil
msg-level=

[higher-priority-when-playing]
profile-cond=not pause and not p["playback-abort"]
ontop = yes
priority = high
profile-restore = copy-equal

[exit-fullscreen-at-eof]
profile-cond=p["eof-reached"] and mp.get_property_number('playlist-pos-1') == mp.get_property_number('playlist-count')
fullscreen = no

[speed-up-shows]
profile-cond=(path and tonumber(mp.get_property"speed") == 1) and (path:find("\\Downloads\\TV\\",1,true) ~= nil) or ((path:find("\\Downloads\\src1\\",1,true) ~= nil or path:find("\\Downloads\\src2\\",1,true) ~= nil) and (path:find".*[xh]26[45]*" ~= nil or path:find".*S%d%d%d?E%d%d*" ~= nil))
profile-restore = copy-equal
speed = 1.25

[slow-igpu]
profile-cond=width >= 3840
profile-restore = copy
hwdec-extra-frames = 64
cache-pause-initial = yes
deband = no
dscale = bicubic_fast
cscale = bilinear
fullscreen = yes
priority = high
#gpu-shader-cache-dir = ~/AppData/Local/Temp/mpv
#icc-cache-dir = ~/AppData/Local/Temp/mpv
#correct-downscaling = no
#vf-append=lavfi=graph=[scale=w=iw*0.5:h=ih*0.5:flags=bicubic]

[downmix-51]
profile-cond=(not p["core-idle"] and not demuxer_via_network and p["audio-params/channel-count"] > 2) and (p["af"][1] == nil or string.find(p["af"][1]["params"]["graph"], "pan=stereo") == nil)
af=lavfi="pan=stereo|FL < 0.5*FC + 0.3*FLC + 0.3*FL + 0.3*BL + 0.3*SL + 0.5*LFE | FR < 0.5*FC + 0.3*FRC + 0.3*FR + 0.3*BR + 0.3*SR + 0.5*LFE",lavfi=[dynaudnorm=f=200:g=11:r=0.2]
audio-buffer = 0.3
ad-queue-enable = yes
ad-queue-max-bytes = 256MiB
ad-queue-max-secs = 10
#audio-channels=stereo

[louder-2ch]
profile-cond=(not p["core-idle"] and not demuxer_via_network and p["audio-params/channel-count"] <= 2) and (p["af"][1] == nil or string.find(p["af"][1]["params"]["graph"], "dynaudnorm=") == nil)
af=lavfi=[dynaudnorm=f=200:g=11:r=0.2]
audio-buffer = 0.2
ad-queue-enable = no

[protocol.file]
#profile-cond=not demuxer_via_network
force-seekable = yes
script-opts-append=osc-title=${filename}

[internet]
cache = yes
cache-pause-initial = yes
demuxer-max-bytes = 4GiB
stream-buffer-size = 512KiB
force-window = immediate
demuxer-readahead-secs = 1800
cache-secs = 1800
cache-pause-wait = 5
network-timeout = 30
tls-verify = yes
tls-ca-file = C:/ProgramData/scoop/apps/cacert/current/cacert.pem
stream-lavf-o-append=multiple_requests=1
stream-lavf-o-append=reconnect=1
stream-lavf-o-append=reconnect_delay_max=30
stream-lavf-o-append=reconnect_streamed=1
stream-lavf-o-append=reconnect_on_http_error=4xx,5xx
stream-lavf-o-append=reconnect_on_network_error=1

[protocol.http]
profile = internet

[protocol.https]
profile = internet
user-agent = "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:100.0) Gecko/20100101 Firefox/100.0"
stream-lavf-o-append=reconnect_at_eof=1

[protocol.ytdl]
script-opts=ytdl_hook-try_ytdl_first=yes
ytdl-raw-options=extractor-args="youtube:player-client=ios"
user-agent = "Mozilla/5.0 (iPhone; CPU iPhone OS 15_4_1 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/15.3 Mobile/15E148 Safari/604.1"
profile = internet

[extension.crdownload]
cache = yes

[extension.part]
cache = yes

[default]